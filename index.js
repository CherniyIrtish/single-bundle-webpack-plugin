(()=>{var s={579:(s,t,e)=>{const i=e(147);s.exports=class{constructor({destination:s,bundleName:t,jsFiles:e,cssFile:i}){this.destination=s,this.bundleName=t,this.jsFiles=e,this.cssFile=i,this.ENCODING="utf-8",this.FILE_MODE=1533,this.LINE_BREAKE="\n"}apply(s){s.hooks.afterEmit.tap("SingleBundleWebpackPlugin",(async()=>{i.rmdir(`${this.destination}`,(()=>{})),i.mkdirSync(`${this.destination}`,{recursive:!0,mode:this.FILE_MODE});const s=await Promise.all(this.jsFiles.map((s=>i.promises.readFile(s,this.ENCODING))));if(await i.promises.writeFile(`${this.destination}/${this.bundleName}.js`,s.join(this.LINE_BREAKE),this.ENCODING),!this.cssFile)return;const t=await i.promises.readFile(this.cssFile,this.ENCODING),e=this._getCssStyles(t);await i.appendFile(`${this.destination}/${this.bundleName}.js`,e,(s=>{s&&console.log("err ",s)}))}))}_getCssStyles(s){return`(function() {\n      const styles = ${JSON.stringify(s)};\n      const styleTag = document.createElement('style');\n\n      styleTag.type = 'text/css';\n      styleTag.appendChild(document.createTextNode(styles));\n\n      document.getElementsByTagName("head")[0].appendChild(styleTag);\n\n      })()`}}},147:s=>{"use strict";s.exports=require("fs")}},t={},e=function e(i){var n=t[i];if(void 0!==n)return n.exports;var a=t[i]={exports:{}};return s[i](a,a.exports,e),a.exports}(579);module.exports=e})();